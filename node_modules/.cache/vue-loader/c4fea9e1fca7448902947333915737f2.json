{"remainingRequest":"C:\\Users\\cwh\\IdeaProjects\\filmsystem\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\cwh\\IdeaProjects\\filmsystem\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\cwh\\IdeaProjects\\filmsystem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\cwh\\IdeaProjects\\filmsystem\\src\\components\\MovieInfo.vue?vue&type=template&id=190ac8fe&scoped=true&","dependencies":[{"path":"C:\\Users\\cwh\\IdeaProjects\\filmsystem\\src\\components\\MovieInfo.vue","mtime":1614515747449},{"path":"C:\\Users\\cwh\\IdeaProjects\\filmsystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cwh\\IdeaProjects\\filmsystem\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\cwh\\IdeaProjects\\filmsystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\cwh\\IdeaProjects\\filmsystem\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}